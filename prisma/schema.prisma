// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model UserType {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  user      User[]
}

model User {
  id         Int            @id @default(autoincrement())
  userTypeId Int
  name       String
  lastName   String
  fullName   String
  email      String         @unique
  password   String
  cpf        String         @unique
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @default(now()) @updatedAt
  userType   UserType       @relation(fields: [userTypeId], references: [id])
  vehicle    Vehicle[]
  modal      Modal[]
  order      OrderService[]

  @@index([userTypeId])
}

model ModalCategory {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  modal     Modal[]
}

model Modal {
  id              Int            @id @default(autoincrement())
  modalCategoryId Int
  userId          Int
  transitBoard    String         @unique
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @default(now()) @updatedAt
  modalCategory   ModalCategory  @relation(fields: [modalCategoryId], references: [id])
  user            User           @relation(fields: [userId], references: [id])
  order           OrderService[]

  @@index([modalCategoryId, userId])
}

model Vehicle {
  id           Int            @id @default(autoincrement())
  userId       Int
  brand        String
  model        String
  year         Int
  transitBoard String         @unique
  height       Float
  width        Float
  weight       Float
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  user         User           @relation(fields: [userId], references: [id])
  order        OrderService[]

  @@index([userId])
}

model OrderStatus {
  id                  Int                   @id @default(autoincrement())
  name                String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @default(now()) @updatedAt
  order               OrderService[]
  orderServiceHistory OrderServiceHistory[]
}

model Problem {
  id        Int                     @id @default(autoincrement())
  name      String
  createdAt DateTime                @default(now())
  updatedAt DateTime                @default(now()) @updatedAt
  order     OrderServiceToProblem[]
}

model TypeLoad {
  id        Int                      @id @default(autoincrement())
  name      String
  createdAt DateTime                 @default(now())
  updatedAt DateTime                 @default(now()) @updatedAt
  order     OrderServiceToTypeLoad[]
}

model OrderService {
  id                  Int                      @id @default(autoincrement())
  modalId             Int?
  vehicleId           Int
  userId              Int
  orderStatusId       Int
  userLatitude        String
  userLongitude       String
  problemDescription  String?
  loadWeight          Float?
  createdAt           DateTime                 @default(now())
  updatedAt           DateTime                 @default(now()) @updatedAt
  modal               Modal?                   @relation(fields: [modalId], references: [id])
  vehicle             Vehicle                  @relation(fields: [vehicleId], references: [id])
  user                User                     @relation(fields: [userId], references: [id])
  orderStatus         OrderStatus              @relation(fields: [orderStatusId], references: [id])
  problem             OrderServiceToProblem[]
  typeLoad            OrderServiceToTypeLoad[]
  orderServiceHistory OrderServiceHistory[]

  @@index([modalId, vehicleId, userId, orderStatusId])
}

model OrderServiceToProblem {
  orderServiceId Int
  problemId      Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  orderService   OrderService @relation(fields: [orderServiceId], references: [id])
  problem        Problem      @relation(fields: [problemId], references: [id])

  @@id([orderServiceId, problemId])
}

model OrderServiceToTypeLoad {
  orderServiceId Int
  typeLoadId     Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  orderService   OrderService @relation(fields: [orderServiceId], references: [id])
  typeLoad       TypeLoad     @relation(fields: [typeLoadId], references: [id])

  @@id([orderServiceId, typeLoadId])
}

model OrderServiceHistory {
  orderServiceId Int
  orderStatusId  Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  orderService   OrderService @relation(fields: [orderServiceId], references: [id])
  orderStatus    OrderStatus  @relation(fields: [orderStatusId], references: [id])

  @@id([orderServiceId, orderStatusId])
}
